{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/product/product-create/product-create.component.ts","./src/app/components/product/product-create/product-create.component.html","./src/app/components/product/product-delete/product-delete.component.ts","./src/app/components/product/product-delete/product-delete.component.html","./src/app/components/product/product-read/product-read.component.ts","./src/app/components/product/product-read/product-read.component.html","./src/app/components/product/product-read2/product-read2-datasource.ts","./src/app/components/product/product-read2/product-read2.component.ts","./src/app/components/product/product-read2/product-read2.component.html","./src/app/components/product/product-update/product-update.component.ts","./src/app/components/product/product-update/product-update.component.html","./src/app/components/product/product.service.ts","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/components/template/header/header.service.ts","./src/app/components/template/nav/nav.component.ts","./src/app/components/template/nav/nav.component.html","./src/app/directives/for.directive.ts","./src/app/directives/red.directive.ts","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/views/product-crud/product-crud.component.ts","./src/app/views/product-crud/product-crud.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { ProductCrudComponent } from \"./views/product-crud/product-crud.component\";\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n  },\n  {\n    path: \"products\",\n    component: ProductCrudComponent\n  },\n  {\n    path: \"products/create\",\n    component: ProductCreateComponent\n  },\n  {\n    path: \"products/update/:id\",\n    component: ProductUpdateComponent\n  },\n  {\n    path: \"products/delete/:id\",\n    component: ProductDeleteComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n\n}\n","<app-header></app-header>\n<app-nav></app-nav>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\n\nimport { MatSidenavModule } from  '@angular/material/sidenav';\nimport { MatCardModule } from  '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { MatButtonModule } from  '@angular/material/button';\nimport { MatSnackBarModule } from  '@angular/material/snack-bar';\nimport { HttpClientModule } from  '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductRead2Component } from './components/product/product-read2/product-read2.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { RedDirective } from './directives/red.directive';\n\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\nimport { ForDirective } from './directives/for.directive';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\n\nregisterLocaleData(localePt);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductRead2Component,\n    RedDirective,\n    ForDirective,\n    ProductUpdateComponent,\n    ProductDeleteComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n  ],\n  providers: [{\n    provide: LOCALE_ID,\n    useValue: 'pt-BR'\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Product } from './../product.model';\nimport { ProductService } from './../product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  product: Product = {\n    name: '',\n    price: null\n  }\n\n  constructor(private productService: ProductService,\n      private router: Router) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  createProduct(): void {\n    this.productService.create(this.product).subscribe(() => {\n      this.productService.showMessage('Produto criado!')\n      this.router.navigate(['/products'])\n    })\n\n  }\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n  }\n}\n","<mat-card>\n    <mat-card-title>Novo Produto</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\"\n                [(ngModel)]=\"product.name\" name=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço (R$)\"\n                [(ngModel)]=\"product.price\" name=\"price\">\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"createProduct()\" color=\"primary\">\n        Salvar\n    </button>\n    \n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>\n\n","import { Router, ActivatedRoute } from \"@angular/router\";\nimport { ProductService } from \"./../product.service\";\nimport { Product } from \"./../product.model\";\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-product-delete\",\n  templateUrl: \"./product-delete.component.html\",\n  styleUrls: [\"./product-delete.component.css\"],\n})\nexport class ProductDeleteComponent implements OnInit {\n  product: Product;\n\n  constructor(\n    private productService: ProductService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.productService.readById(id).subscribe((product) => {\n      this.product = product;\n    });\n  }\n\n  deleteProduct(): void {\n    this.productService.delete(this.product.id).subscribe(() => {\n      this.productService.showMessage(\"Produto excluido com sucesso!\");\n      this.router.navigate([\"/products\"]);\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/products\"]);\n  }\n}\n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\"\n                [value]=\"product.name\" name=\"name\" disabled>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço (R$)\"\n                [value]=\"product.price\" name=\"price\" disabled>\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"deleteProduct()\" color=\"warn\">\n        Excluir\n    </button>\n    \n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>","import { ProductService } from './../product.service';\nimport { Product } from './../product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n  products: Product[]\n  displayedColumns = ['id', 'name', 'price', 'action']\n  \n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.productService.read().subscribe(products => {\n      this.products = products\n    })\n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"products\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Name</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n      </ng-container>\n  \n      <!-- Price Column -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.price | currency: 'BRL' }}</td>\n      </ng-container>\n\n      <!-- Action Column -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n            <a routerLink=\"/products/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/products/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n        </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>","import { Product } from './../product.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\nconst EXAMPLE_DATA: Product[] = [\n  {id: 1, name: 'Hydrogen', price: 9.99},\n  {id: 2, name: 'Helium', price: 9.99},\n  {id: 3, name: 'Lithium', price: 9.99},\n  {id: 4, name: 'Beryllium', price: 9.99},\n  {id: 5, name: 'Boron', price: 9.99},\n  {id: 6, name: 'Carbon', price: 9.99},\n  {id: 7, name: 'Nitrogen', price: 9.99},\n  {id: 8, name: 'Oxygen', price: 9.99},\n  {id: 9, name: 'Fluorine', price: 9.99},\n  {id: 10, name: 'Neon', price: 9.99},\n  {id: 11, name: 'Sodium', price: 9.99},\n  {id: 12, name: 'Magnesium', price: 9.99},\n  {id: 13, name: 'Aluminum', price: 9.99},\n  {id: 14, name: 'Silicon', price: 9.99},\n  {id: 15, name: 'Phosphorus', price: 9.99},\n  {id: 16, name: 'Sulfur', price: 9.99},\n  {id: 17, name: 'Chlorine', price: 9.99},\n  {id: 18, name: 'Argon', price: 9.99},\n  {id: 19, name: 'Potassium', price: 9.99},\n  {id: 20, name: 'Calcium', price: 9.99},\n];\n\n/**\n * Data source for the ProductRead2 view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductRead2DataSource extends DataSource<Product> {\n  data: Product[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<Product[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: Product[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: Product[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { Product } from './../product.model';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductRead2DataSource } from './product-read2-datasource';\n\n@Component({\n  selector: 'app-product-read2',\n  templateUrl: './product-read2.component.html',\n  styleUrls: ['./product-read2.component.css']\n})\nexport class ProductRead2Component implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<Product>;\n  dataSource: ProductRead2DataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name', 'price'];\n\n  ngOnInit() {\n    this.dataSource = new ProductRead2DataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <!-- Price Column -->\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Preço</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.price}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 50]\">\n  </mat-paginator>\n</div>\n","import { Product } from \"./../product.model\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ProductService } from \"./../product.service\";\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-product-update\",\n  templateUrl: \"./product-update.component.html\",\n  styleUrls: [\"./product-update.component.css\"],\n})\nexport class ProductUpdateComponent implements OnInit {\n  product: Product;\n\n  constructor(\n    private productService: ProductService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    const id = +this.route.snapshot.paramMap.get(\"id\");\n    this.productService.readById(id).subscribe((product) => {\n      this.product = product;\n    });\n  }\n\n  updateProduct(): void {\n    this.productService.update(this.product).subscribe(() => {\n      this.productService.showMessage(\"Produto atualizado com sucesso!\");\n      this.router.navigate([\"/products\"]);\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/products\"]);\n  }\n}\n","<mat-card>\n    <mat-card-title>Alterar Produto</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\"\n                [(ngModel)]=\"product.name\" name=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço (R$)\"\n                [(ngModel)]=\"product.price\" name=\"price\">\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\">\n        Atualizar\n    </button>\n    \n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>","import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Product } from \"./product.model\";\nimport { Observable, EMPTY } from \"rxjs\";\nimport { map, catchError } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProductService {\n  baseUrl = \"http://localhost:3001/products\";\n\n  constructor(private snackBar: MatSnackBar, private http: HttpClient) {}\n\n  showMessage(msg: string, isError: boolean = false): void {\n    this.snackBar.open(msg, \"X\", {\n      duration: 3000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"top\",\n      panelClass: isError ? [\"msg-error\"] : [\"msg-success\"],\n    });\n  }\n\n  create(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.baseUrl, product).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n\n  read(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.baseUrl).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n\n  readById(id: number): Observable<Product> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get<Product>(url).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n\n  update(product: Product): Observable<Product> {\n    const url = `${this.baseUrl}/${product.id}`;\n    return this.http.put<Product>(url, product).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n\n  delete(id: number): Observable<Product> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.delete<Product>(url).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n\n  errorHandler(e: any): Observable<any> {\n    this.showMessage(\"Ocorreu um erro!\", true);\n    return EMPTY;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Desenvolvido com \n        <i class=\"material-icons v-middle\" appRed>\n            favorite\n        </i>\n        por <strong>Cod<span class=\"red\">3</span>r</strong>\n    </span>\n</mat-toolbar>\n","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService: HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\n  get title(): string {\n    return this.headerService.headerData.title\n  }\n\n  get icon(): string {\n    return this.headerService.headerData.icon\n  }\n\n  get routeUrl(): string {\n    return this.headerService.headerData.routeUrl\n  }\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.png\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\">\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n            {{ title }}\n        </a>\n    </span>\n</mat-toolbar>\n","import { HeaderData } from './header-data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title: 'Início',\n    icon: 'home',\n    routeUrl: ''\n  })\n\n  constructor() { }\n\n  get headerData(): HeaderData {\n    return this._headerData.value\n  }\n\n  set headerData(headerData: HeaderData) {\n    this._headerData.next(headerData)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav class=\"sidenav\" mode=\"side\" opened \n        fixedInViewport=\"true\" fixedTopGap=\"64\">\n        <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <a mat-list-item  routerLink=\"/products\">\n                <i class=\"material-icons\">\n                    storefront\n                </i>\n                Produtos\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"content\">\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import {\n  Directive,\n  OnInit,\n  Input,\n  ViewContainerRef,\n  TemplateRef,\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[myFor]\",\n})\nexport class ForDirective implements OnInit {\n  @Input(\"myForEm\") numbers: number[];\n\n  constructor(\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>\n  ) {}\n\n  ngOnInit(): void {\n    for (let number of this.numbers) {\n      this.container.createEmbeddedView(\n        this.template, { $implicit : number });\n    }\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) {\n    el.nativeElement.style.color = '#e35e6b'\n  }\n\n}\n","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private headerService: HeaderService) {\n    headerService.headerData = {\n      title: 'Início',\n      icon: 'home',\n      routeUrl: ''\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo!\n    </mat-card-title>\n    <mat-card-subtitle class=\"subtitle\">\n        Sistema para exemplificar a construção de um cadastro em Angular\n    </mat-card-subtitle>\n</mat-card>\n","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router: Router, private headerService: HeaderService) {\n    headerService.headerData = {\n      title: 'Cadastro de Produtos',\n      icon: 'storefront',\n      routeUrl: '/products'\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  navigateToProductCreate(): void {\n    this.router.navigate(['/products/create'])\n  }\n\n}\n","\n<button mat-raised-button (click)=\"navigateToProductCreate()\"\n    color=\"primary\">\n    Novo Produto\n</button>\n\n<app-product-read></app-product-read>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}